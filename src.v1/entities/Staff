package entities;

import java.io.Serializable;
import java.util.ArrayList;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.DiscriminatorColumn;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Table;

@Entity
@Table
@Inheritance(strategy = InheritanceType.JOINED)
@DiscriminatorColumn(name = "type")
public class Staff implements Serializable {
	private static final long serialVersionUID = 1L;
	/**
	 * In order to use @DiscriminatorColumn, you must use
	 * @Inheritance annotation. 
	 * 
	 * The parent uses the @DiscriminatorColumn, 
	 * because we are inheriting and joining/ combining the children classes
	 * 
	 * While, for the children classes, we use;
	 * @DiscriminatorValue above the children class name; for example;
	 * 
	 *  @Entity
	 *  @DiscriminatorValue
	 *  public class childClass {
	 *  
	 *  SINGLE_TABLE = All data in one table. Some columns can be null. 
	 *  JOINED_TABLE = New table made to link primary keys together.
	 */
	
	@Id
	@Basic
	@Column
	private int sid;
	@Basic
	@Column
	private String name;
	@Basic
	@Column
	private ArrayList<Integer> phoneNumbers;
	
	public Staff() {
		super();
		// TODO Auto-generated constructor stub
	}
	
	public Staff(int sid, String name, ArrayList<Integer> phoneNumbers) {
		super();
		this.sid = sid;
		this.name = name;
		this.phoneNumbers = phoneNumbers;
	}
	
	@Override
	public String toString() {
		return "Staff [sid=" + sid + ", name=" + name 
				+ ", phoneNumbers=" + phoneNumbers + "]";
	}
	
	public int getSid() {
		return sid;
	}
	
	public void setSid(int sid) {
		this.sid = sid;
	}
	
	public String getName() {
		return name;
	}
	
	public void setName(String name) {
		this.name = name;
	}
	
	public ArrayList<Integer> getPhoneNumbers() {
		return phoneNumbers;
	}
	
	public void setPhoneNumbers(ArrayList<Integer> phoneNumbers) {
		this.phoneNumbers = phoneNumbers;
	}	

}
